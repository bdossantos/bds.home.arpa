---
version: "3"

services:
  netdata:
    image: netdata/netdata:v1.36.1
    container_name: netdata
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /dev/bus/usb:/dev/bus/usb:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /volume1/docker_datas/netdata/config:/etc/netdata:rw
      - /volume1/docker_datas/netdata/log:/var/log/netdata:rw
      - /volume1/homes/admin/Code/bds.home/scripts/netdata:/netdata
    env_file:
      - /volume1/homes/admin/Code/bds.home/.env
    ports:
      - 19999:19999/tcp
    networks:
      - monitoring
    restart: always
  home-assistant:
    image: bdossantos/home-assistant:latest
    container_name: home-assistant
    volumes:
      - /dev/bus/usb:/dev/bus/usb:ro
      - /etc/localtime:/etc/localtime:ro
      - /volume1/homes/admin/Code/bds.home/homeassistant:/config:rw
    environment:
      - TZ=Europe/Paris
    ports:
      - 8123:8123/tcp
    networks:
      - home-assistant
    restart: always
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - /volume1/docker_datas/prometheus:/prometheus:rw
    command:
      - "--config.file=/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=90d"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090/tcp
    networks:
      - monitoring
    restart: always
  snmp-exporter:
    image: prom/snmp-exporter:v0.21.0
    container_name: snmp-exporter
    volumes:
      - /volume1/homes/admin/Code/bds.home/snmp_generator/snmp.yml:/etc/snmp_exporter/snmp.yml
    ports:
      - 9116:9116/tcp
    command:
      - "--config.file=/etc/snmp_exporter/snmp.yml"
    networks:
      - monitoring
    restart: always
  grafana:
    image: grafana/grafana:9.2.3
    container_name: grafana
    volumes:
      - /volume1/docker_datas/grafana:/var/lib/grafana
    ports:
      - 3000:3000/tcp
    environment:
      - GF_INSTALL_PLUGINS=grafana-strava-datasource,grafana-worldmap-panel
      - GF_PLUGINS_ENABLE_ALPHA=true
      - GF_STRAVA_DS_DATA_PATH=/var/lib/grafana/strava
    networks:
      - monitoring
    restart: always
  paperless-ngx:
    image: bdossantos/paperless-ngx:1.13.0-41abc46
    container_name: paperless
    depends_on:
      - paperless-broker
      - paperless-db
      - paperless-gotenberg
      - paperless-tika
    ports:
      - 8000:8000/tcp
    volumes:
      - /volume1/docker_datas/paperless/consume:/app/consume
      - /volume1/docker_datas/paperless/data:/app/data
      - /volume1/docker_datas/paperless/export:/app/export
      - /volume1/docker_datas/paperless/media:/app/media
      - /volume1/docker_datas/paperless/static:/app/static
    environment:
      - PAPERLESS_DBHOST=paperless-db
      - PAPERLESS_DBNAME=paperless
      - PAPERLESS_DBPORT=5433
      - PAPERLESS_DBUSER=paperless
      - PAPERLESS_FILENAME_FORMAT={created_year}/{title}
      - PAPERLESS_REDIS=redis://paperless-broker:6379
      - PAPERLESS_TIKA_ENABLED=1
      - PAPERLESS_TIKA_ENDPOINT=http://papereless-tika:9998
      - PAPERLESS_TIKA_GOTENBERG_ENDPOINT=http://paperless-gotenberg:3001
      - PAPERLESS_WEBSERVER_WORKERS=2
    env_file:
      - /volume1/docker_datas/paperless/.env
    networks:
      - paperless
    restart: always
  paperless-db:
    image: postgres:14-bullseye
    container_name: paperless-db
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /volume1/docker_datas/paperless-db/14/data:/var/lib/postgresql/data
    env_file:
      - /volume1/docker_datas/paperless/.env
    command: -p 5433 -c shared_buffers=512MB -c effective_cache_size=2GB -c maintenance_work_mem=512MB -c min_wal_size=100MB -c max_wal_size=2GB -c max_worker_processes=4 -c max_parallel_workers_per_gather=2 -c max_parallel_workers=4 -c max_parallel_maintenance_workers=2 -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c default_statistics_target=100 -c random_page_cost=4 -c effective_io_concurrency=2
    ports:
      - 5433:5433/tcp
    environment:
      - POSTGRES_DB=paperless
      - POSTGRES_USER=paperless
    networks:
      - paperless
    restart: always
  paperless-broker:
    image: redis:7.0-bullseye
    container_name: paperless-broker
    ports:
      - 6379:6379/tcp
    networks:
      - paperless
    restart: always
  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:7.6
    container_name: paperless-gotenberg
    command:
      - "gotenberg"
      - "--chromium-disable-routes=true"
    environment:
      - DISABLE_GOOGLE_CHROME=1
    ports:
      - 3001:3000/tcp
    networks:
      - paperless
    restart: always
  paperless-tika:
    image: apache/tika:2.6.0.1
    container_name: paperless-tika
    ports:
      - 9998:9998/tcp
    networks:
      - paperless
    restart: always

networks:
  home-assistant:
    ipam:
      driver: default
      config:
        - subnet: 172.10.0.0/16
          gateway: 172.10.0.1
  monitoring:
    ipam:
      driver: default
      config:
        - subnet: 172.11.0.0/16
          gateway: 172.11.0.1
  paperless:
    ipam:
      driver: default
      config:
        - subnet: 172.12.0.0/16
          gateway: 172.12.0.1
